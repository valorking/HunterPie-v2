[ { "title": "Specialized Tool Widget", "url": "/posts/specialized-tools-widget/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-06-16 22:00:00 +0800", "snippet": "The Specialized Tool Widget is responsible for tracking and displaying your primary and secondary equipped specialized tools cooldown and timers. They also visually indicate which mantle or booster it is currently tracking by their icons and color. This Widget is only available for Monster Hunter: World.Widget Structure Specialized Tool Widget Structure" }, { "title": "HunterPie v2.1.0", "url": "/posts/update-v2.1.0/", "categories": "Update, v2", "tags": "", "date": "2022-06-15 10:57:00 +0800", "snippet": "HunterPie v2.1.0 contains the second part of the full Monster Hunter World support.General Added supporter badge on top of the HunterPie’s window. HunterPie no longer saves its configurations on exit. Adjusted HunterPie settings window margin. Adjusted Damage Meter icon in the settings window.Monster Hunter: WorldMonster Widget Added tenderize information to monster’s part health bars. Severable and normal parts now have different colors.Specialized Tool WidgetThe specialized tool widget is the one responsible for showing your primary and secondary specialized tool cooldown and timer. Tip: Refer to the documentation for more information.Bug Fixes Fixed a bug where widgets wouldn’t be hidden in NPC dialogs even when the “Hide when HUD is open” option is enabled in Monster Hunter Rise. Fixed a bug where HunterPie would crash if there were duplicate constant names in the map file. Fixed a bug where Training Dojo state bar size would go back and forth when there were 0 days left for training." }, { "title": "Damage Meter Widget", "url": "/posts/damage-meter-widget/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-06-15 10:21:00 +0800", "snippet": "The Damage Meter Widget is responsible for tracking and displaying yours and your party members damage and damage per second, as well as plotting everything in a graph for better understanding of your hunts. This Widget is only available for Monster Hunter: World at the moment.Widget Structure Damage Meter widget demonstrationSettingsPlayer colorsYou can change yours and your party members color by going to the settings tab and clicking on the color configuration.Damage plotThe damage meter widget has a built-in plot graph, it displays your damager per second over time. You can also disable it in the damage widget settings tab." }, { "title": "HunterPie v2.0.23", "url": "/posts/update-v2.0.23/", "categories": "Update, v2", "tags": "", "date": "2022-05-02 03:51:00 +0800", "snippet": "HunterPie v2.0.23 contains the first part of the full Monster Hunter World support.General Changed Mount ailment name to Ride for Monster Hunter Rise Changed visual component for hotkeys Changed visuals of ComboBox Changed HunterPie client color scheme to be more consistent Added Offensive Guard abnormality for Monster Hunter RiseConfigurationSince HunterPie can support multiple games, it allows you to configure games separately, so you can have a different overlay configuration for each game.Choosing which game to configure is rather simple, just choose the game by its name in the box in the bottom of HunterPie’s settings window.Monster Hunter: WorldOne of the main reasons HunterPie v2 exists is to support multiple games from the Monster Hunter series, this update brings support for Monster Hunter: World and some of the main overlay Widgets that v1 has at the moment.OverlayMonster WidgetCompared to HunterPie legacy, the monster widget now has 100% accurate lockon detection, supports more than 3 monsters. Tip: Refer to the documentation for more information.Abnormalities WidgetRight now, HunterPie supports most of the abnormalities Monster Hunter: World has, with exception of potions that last forever like Demondrug and Armorskin. Tip: Refer to the documentation for more information.Damage Meter WidgetThe damage meter is something that’s part of the core of HunterPie legacy, in v2 there were a lot of enhancements: Quest timer is now 100% accurate and displays the right time even for in-progress quests (like SOSes)." }, { "title": "Chat Widget", "url": "/posts/chat-widget/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-04-01 10:54:00 +0800", "snippet": "The Chat Widget is responsible to display in-game messages from other players.Widget StructureWhy does it exist?Monster Hunter: Rise’s built-in chat was made for Switch and not for PC, making it really difficult to read messages and also keep track of them. Whenever you get a message, it stays on screen for about 10 seconds and then fades away, if you want to read the message again, you are obligated to go to your in-game settings, open the chat messages and then open the chat, which can become very annoying if you play online with friends often.HunterPie’s chat solves this issue by showing only the player messages, and it also shows the widget whenever you press Enter to type in the chat. Warning: Preset messages will not be shown in the chat." }, { "title": "Activities Widget", "url": "/posts/activities-widget/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-04-01 10:39:00 +0800", "snippet": "The Activities Widget is responsible for tracking and displaying the data from side activities in the game as Submarines, Training Dojo, etc.Widget StructureSupported ActitivitesMonster Hunter: Rise Submarines Training Dojo Meowmasters and other activities will be supported in the future." }, { "title": "HunterPie v2.0.22", "url": "/posts/update-v2.0.22/", "categories": "Update, v2", "tags": "", "date": "2022-04-01 09:28:00 +0800", "snippet": "HunterPie v2.0.22 brings some new features, fixes and optimizations.General Added support for Monster Hunter Rise v3.9.1.0 Added Party state and size to Discord Rich Presence Added option to automatically close HunterPie when game is no longer running Added option to start HunterPie on background Added option to not show confirmation popup on exit Added option to hide individual widgets when the in-game HUD is visible (e.g when you’re in camp, talking to NPCs, with game menu open, etc) HunterPie now updates settings file in real time Optimizations to the UI thread Optimizations to the Scan thread Minor visual enhancedments to the main window HunterPie now displays the last config sync time in the Settings tabActivities WidgetThe Activities Widget tracks and displays your Submarines, Training Dojo and Training buddies data. Tip: Refer to the documentation for more information.Chat WidgetThe Chat Widget displays messages from your chat so you won’t lose track of them during a hunt. This widget is designed to only show actual messages, no NPCs, no system messages nor notifications from the game. Tip: Refer to the documentation for more information.Abnormalities Widget Added Protective Polish Added Arc Shot: Brace Added Arc Shot: AffinityBug Fixes Fixed a bug where HunterPie would still try updating Rich Presence when it’s disabled Fixed bug where HunterPie would crash when trying to unload an unitialized widgets Fixed CDN download causing HunterPie to crash due to unauthorized file access Fixed wrong string for Training Dojo setting Fixed default widget positions Fixed bug where HunterPie would not parse floats separate by comma due to cultural dependent system Fixed memory leak due to garbage memory values in the string lengths, causing HunterPie to read a large array of bytes" }, { "title": "HunterPie v2.0.21", "url": "/posts/update-v2.0.21/", "categories": "Update, v2", "tags": "", "date": "2022-03-02 03:51:00 +0800", "snippet": "HunterPie v2.0.21 brings some new features, fixes and design changes.General Added support for Monster Hunter Rise v3.9.0.0 Added option to patch game function to render the Wirebug aim even when the Wirebug Gauge HUD is disabled. Added option to hide Overlay when the game is not focused. Added option to hide unknown parts (parts labeled as ???). Added Patreon button in HunterPie’s sidebar. HunterPie now reports crashes automatically to the developer. It’s now possible to scale a widget while in design mode by using the Mouse Scroll while hovering on the Widget. It’s now possible to change a widget’s opacity by pressing Ctrl + Mouse Scroll while hovering on the Widget.Wirebug WidgetThe Wirebug Widget tracks and displays all the useful information you need to know about your Wirebugs, as cooldown, timers and if they’re available or not. Its designed to replace the in-game Wirebug Gauge, however, you can also place it on top of the in-game UI too. Wirebug Widget example Tip: Refer to the documentation for more information.ClientThe HunterPie has also gotten a new visual to some elements in it’s client window New console window design New settings window designBug Fixes Fixed bug where HunterPie would try to render an invalid part and throw an error." }, { "title": "Wirebug Widget", "url": "/posts/wirebug-widget/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-02-27 12:25:00 +0800", "snippet": "The Wirebug Widget is responsible for tracking and displaying all your Wirebugs information as cooldown, timer and if they’re available or not. This widget is quite simple and follows the same design as the in-game Wirebug gauge.Widget StructureIn-Game HUDReplacing the in-game Wirebug Gauge is quite simple, while in-game, open the HUD settings and disable the Wirebug Gauge. Attention: Disabling the in-game Wirebug Gauge also disables the Wirebug aim, to fix this, enable the Patch in-game Wirebug Aim option in your HunterPie’s Wirebug settings." }, { "title": "Localization", "url": "/posts/localization/", "categories": "Documentation, General", "tags": "", "date": "2022-02-18 11:07:00 +0800", "snippet": "HunterPie supports different languages other than English, if you want to localize it to another language make sure to read this because it covers everything you need to know to make your own localization file.LocalizationsThe supported languages are: Language Translated (%) Getting StartedRequirements A decent text editor, I personally recommend: Visual Studio Code Sublime Text Notepad++ The default strings file, you can find it here Tip: Do not use the default Windows’s notepad, that can cause file encoding issues and will make HunterPie fail to load your file. Make sure your encoding file is UTF-8.LocalizingNow thhat you have the requirements, it’s time to start translating!Use the en-us.xml you downloaded in the last step as a base file, it contains all the currently supported strings that are used by both the HunterPie client and the Overlay and the integrations. Warning: Make sure to rename your file to something else so it doesn’t conflict with the default files. If you don’t rename it, there’s a risk your local file will be overwritten during the auto-update process.Do not touch the first line of the XML Document, that is telling our XML parser the version and file encoding we are using. It should ALWAYS be the first line of the file and should always look like this:&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&amp;gt;&amp;lt;!-- Comments can be added ONLY after the tag --&amp;gt;Next step is to set the language name, you can do it in the next Tag by changing the value of the lang attribute.&amp;lt;!-- Before --&amp;gt;&amp;lt;Strings lang=&quot;English&quot;&amp;gt;&amp;lt;!-- After --&amp;gt;&amp;lt;Strings lang=&quot;Japanese&quot;&amp;gt;Now we’re can translate the rest of the file, most localization Tags have three attributes: Id: Used internally by HunterPie to query the string and description. DO NOT TOUCH THIS VALUE String: The actual string that will be shown in HunterPie’s interface. Description: This one is only used in places where there can be a tooltip, e.g: Settings, Buttons Please, try to keep all translations as accurate as possible with the in-game strings (especially abnormalities and monster names). You can shorten long strings as long as they don’t become difficult to understand.E.g:&amp;lt;!-- Before --&amp;gt;&amp;lt;Rise&amp;gt; &amp;lt;Monster Id=&quot;0&quot; String=&quot;Rathian&quot;/&amp;gt; &amp;lt;Monster Id=&quot;1&quot; String=&quot;Apex Rathian&quot;/&amp;gt; &amp;lt;Monster Id=&quot;2&quot; String=&quot;Rathalos&quot;/&amp;gt; &amp;lt;Monster Id=&quot;3&quot; String=&quot;Apex Rathalos&quot;/&amp;gt; &amp;lt;Monster Id=&quot;4&quot; String=&quot;Khezu&quot;/&amp;gt; &amp;lt;Monster Id=&quot;5&quot; String=&quot;Basarios&quot;/&amp;gt; [...]&amp;lt;!-- After --&amp;gt;&amp;lt;Rise&amp;gt; &amp;lt;Monster Id=&quot;0&quot; String=&quot;リオレイア&quot;/&amp;gt; &amp;lt;Monster Id=&quot;1&quot; String=&quot;ヌシ・リオレイア&quot;/&amp;gt; &amp;lt;Monster Id=&quot;2&quot; String=&quot;リオレウス&quot;/&amp;gt; &amp;lt;Monster Id=&quot;3&quot; String=&quot;ヌシ・リオレウス&quot;/&amp;gt; &amp;lt;Monster Id=&quot;4&quot; String=&quot;フルフル&quot;/&amp;gt; &amp;lt;Monster Id=&quot;5&quot; String=&quot;バサルモス&quot;/&amp;gt; [...]XML Special CharactersXML has some characters that should be replaced by their escaped versions in order for it to work. This is because these characters are used in the XML’s structure itself, and the parser has a hard time figuring out whether it’s a XML character or if it’s just a normal character. Character Replaced by &amp;amp; &amp;amp;amp; &amp;lt; &amp;amp;lt; &amp;gt; &amp;amp;gt; ” &amp;amp;quot; ’ &amp;amp;apos; E.g:&amp;lt;!-- This will give us an error --&amp;gt;&amp;lt;Abnormality Id=&quot;ABNORMALITY_ATTACK_DEF_UP&quot; String=&quot;Attack &amp;amp; Def. Up&quot;/&amp;gt;&amp;lt;!-- This will work --&amp;gt;&amp;lt;Abnormality Id=&quot;ABNORMALITY_ATTACK_DEF_UP&quot; String=&quot;Attack &amp;amp;amp; Def. Up&quot;/&amp;gt;Sending my localizationNow that you’ve finished translating all strings, you can open a Pull Request to HunterPie’s repository or send it in the #translation-discussion channel in HunterPie’s official Discord Server. Making your own Pull Request is the preferred way, since it will also mark you as one of HunterPie’s contributors in GitHub, but if you have no Git experience sending the file directly to me on Discord is also fine." }, { "title": "Frequently Asked Questions", "url": "/posts/faq/", "categories": "Documentation, General", "tags": "", "date": "2022-02-17 02:42:00 +0800", "snippet": "Windows is asking me to install .NET 5, what do I do?HunterPie requires .NET 5.0 Desktop Runtime to run properly, you can download it from Microsoft’s official site by clicking here.Moving and Scaling WidgetsTo move a widget you can either use Design Mode (togglable by pressing the default hotkey: ScrollLock) or set the absolute coordinations in HunterPie’s settings.To scale a widget, you can go to HunterPie’s settings for that widget and use the Scale slider. For more information about widgets, check the Overlay and Widgets documentations.Why aren’t my settings saving?Make sure your HunterPie’s folder is not in read only mode, if that doesn’t work, try moving your HunterPie folder to somewhere else.My auto update is getting stuckSame as the previous issue, make sure your folder is not in read only mode, also try moving its folder somewhere else.My overlay seems delayedSome people has reported that as a Windows 11 issue, some known work arounds for that include: Changing rendering strategy to Software in HunterPie’s setttings. Enabling compatibility mode for HunterPie" }, { "title": "HunterPie v2.0.20", "url": "/posts/update-v2.0.20/", "categories": "Update, v2", "tags": "", "date": "2022-02-17 02:14:00 +0800", "snippet": "HunterPie v2.0.20 brings some new features and fixes.General Patch notes button now opens the current update patch notes in HunterPie’s documentation Added supporter tokens, allowing Patreons to receive beta updates Added some development options to the Advanced Debug ToolsAbnormality TraysAbnormality Trays are bars that track and display your character’s buff and debuff timers, they can be used in case you want to know how long your Hunting Horn buff will last, for example.As of now, HunterPie supports the following categories for buffs, not all of the buffs are supported, but they will be added whenever possible: Songs Consumables (this also includes environment buffs) Debuffs Gear skills Food skills Abnormality tray showing buffs and debuff Refer to the documentation for more information.Monster WidgetNew featuresMonster Widget has gotten some visual enhancements to the parts components, now it displays flinch, break and sever values. Since all parts have flinch values, the bars will still show that info once you can no longer break/sever it. Added horizontal orientation for Monster Widget. Added dynamic resizing for health bars depending on how many monsters the Widget is showing at the moment Added minimum width for Monster health bars Added flinch, severable and breakable partsPartsEach color represents a different type of part: Color Represents Description Flinch Flinch values represent when the monster is going to flinch or get staggered. Break Break values represent when a part is about to break. Sever Severable parts are the ones that can be cut off from a monster. Broken A part will become Grey when it’s either broken or severed. Severable partsSeverable parts are the parts that can be physically removed from the monster’s body, like tail and horns. Severable and Breakable partBreakable partsBreakable parts are the parts that can be broken, showing the “Part was broken” message in the game. Breakable and Flinch part Refer to the documentation for more information.Bug Fixes Fixed Somnacanth part order Fixed wrong Chameleos part order Fixed wrong pointer to monster flinch values, causing some monsters to not show any part data at all. Fixed bug where monsters would not despawn once dead. Fixed bug where HunterPie would show invalid parts before all valid parts. Fixed bug where HunterPie wouldn’t hide monster health percentage in Discord Rich Presence properly Fixed bug where HunterPie would fail to find game process due to cultural differences in UTF-8 characters" }, { "title": "Widgets", "url": "/posts/widgets/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-02-15 06:03:00 +0800", "snippet": "Widgets are part of HunterPie’s core, they’re the components that hold the widget’s content to display their data to the user.SettingsBy default, every widget has 6 default settings: Setting Description Initialize Widget When enabled, this Widget will be initialized when the game process is detected by HunterPie. Having this disabled is good for performance in case you’re not interested on what this Widget has to show. Show Widget When enabled, the Widget will be shown whenever it has content to be displayed, having this turned off will make it not show the Widget at all, however, it will still be in-memory tracking all data. Widget Opacity Sets the general widget opacity, the lower, the more transparent it will become. Widget Scale Sets the widget linear scale, 1 is the default scale, or 100% of it’s original scale, 2 means 200% of it’s original scale, therefore, making it 2x bigger. Streamer Mode Widgets are invisible to your system, making OBS fail to find them when you want to also record the overlay. This setting is a workaround for that OBS limitation. Widget Position Sets the absolute X and Y coordinates for this widget, this is relative to your main screen, values can be negative in case you have a screen on the left side of your main monitor. " }, { "title": "Monster Widget", "url": "/posts/monster-widget/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-02-15 06:03:00 +0800", "snippet": "The Monster Widget is responsible to track and display all the big monsters information. It is one of the most complex widgets and each single component is designed to be simple without losing information.Widget StructureMonster PartsParts are represented by the blue, yellow and red bars under the ailments component. Their visual representation depends on what type of part it is: Color Represents Description Flinch Flinch values represent when the monster is going to flinch or get staggered. Break Break values represent when a part is about to break. Sever Severable parts are the ones that can be cut off from a monster. Broken A part will become Grey when it’s either broken or severed. When a part has all three values, the priority order is always Sever &amp;gt; Break &amp;gt; Flinch and the exact values displayed under the part health bar will follow that priority. By default, HunterPie only shows monsters’s parts when you lock/focus on the monster using the in-game lock-on system.Monster AilmentsAilments are statuses and debuffs you can inflict on a monster, HunterPie supports all of them, however, some of them might display as Unknown since ailments are mapped manually and require testing.They’re designed to be as simple to read as possible, displaying Build Up, Duration and also how many times that Ailment has been activated on that monster. Each ailment has it’s own individual color to make it easier to know what ailment has been inflicted without having to read it’s name. By default, HunterPie only shows monsters’s ailments when you lock/focus on the monster using the in-game lock-on system.Targeting a monsterHaving to target a monster to see their information is part of HunterPie’s design to avoid cluttering the screen with multiple monsters information, to target a monster, all you need to do is use the in-game lock-on system. If you have targeting system disabled in-game, this will not work. You must have either Target or Focus enabled.OrientationMonster Widget supports two orientations, Vertical and Horizontal Orientation Description Vertical Monster health bars will be placed on top of each other in the order they spawn Horizontal Monster healht bars will be placed side by side in the order they spawn Horizontally aligned barsDynamic ResizingDynamic resizing is one of the Monster Widget’s features, it’s very useful when your widget is in the Horizontal mode, it tries to calculate the health bar’s width dynamically instead of having a static width based on how many monsters the widget is displaying at that moment.The width is calculated based on the width set as Minimum Width, using the following formula:\\[dynWidth = min + ((3 - n) * {min \\over 4})\\] min: Minimum Width n: Number of monsters visibleSo, if you set the minimum width as 300, each possible case will result in these dynamic widths: Monsters visible Width (px) 3 300 2 375 1 450 Note: Even if the dynamic width is higher or lower than the maximum and minimum width respectively, the visual width will not go above/below those widths." }, { "title": "Overlay", "url": "/posts/overlay/", "categories": "Documentation, Overlay", "tags": "", "date": "2022-02-14 12:31:00 +0800", "snippet": "Overlay is one of HunterPie’s core features, it is responsible to manage every single Widget.Design ModeDesign Mode makes all Widgets visible to mouse events, making them clickable and allowing the user to interact with them. When Design Mode is active you can drag-and-drop Widgets with your mouse, scale linearly with your mouse scroll and also individually close a widget you don’t want to see anymore.To toggle design mode, you can use ScrollLock or whatever Hotkey you set in your HunterPie’s configuration." }, { "title": "Abnormality Tray Widget", "url": "/posts/abnormality-tray-widget/", "categories": "Documentation, Overlay, Widgets", "tags": "", "date": "2022-02-14 00:23:00 +0800", "snippet": "The Abnormality Tray widget allows you to track your buff and debuff durations, it’s useful when playing Hunting Horn, or when you just want to know how long a certain buff will last. HunterPie lets you create as many trays as you want, allowing you to separate abnormalities in different trays. Keep in mind the more widgets you have on your screen, the more it impacts performance.Creating a new trayTo create a new tray, open HunterPie’s settings in the Abnormality Trays tab and click on the , in case you want to delete a specific tray, click on the , it will prompt you with a confirmation so you can delete the tray. If you’re creating new bars while the game is running, you’ll have to restart HunterPie in order for it to visually create the bar widget.Configuring the trayTo configure your new tray, click on the . It will open a new window that lets you configure all the tray settings individually.Enabling abnormalitiesIn the configuration window, there’s a panel with all the available abnormalities, clicking on one of them will automatically enable tracking that abnormality in that individual tray. Icon Description Enabled Disabled OrientationOrientation is the setting that indicates which direction your tray will grow to fit all abnormalities, setting it to Horizontal will make the tray grow sideways until it reaches its maximum width, on the other hand, Vertical will make the bar grow downwards until it reaches the maximum height.Maximum SizeSetting a maximum size to your tray will cause it to not grow infinitely, wrapping new abnormalities downwards (if the orientation is Horizontal) or sideways (if the orientation is Vertical)." } ]
